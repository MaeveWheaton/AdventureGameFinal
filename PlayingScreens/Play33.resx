<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="hutPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>